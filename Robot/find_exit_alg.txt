function main() begin
    bool exitFound = false
    call exitFound <- findPath1
    int toExit = wall
end

bool res = function findPath1() begin
    bool res = false

    int turn = 0
    int x = 0
    int y = 0
    int count = 0
    int uminus = x - 1
    int temp = 0
    int tempexit = false
    bool noexit = false
    for i = 0: 5 beginfor
        if noexit beginif
            i <- 6
        endif
        if !noexit beginif
            right
            call turn <- rot_right turn
            temp <- wall
            if temp < 1 beginif
                tempexit <- exit
                if !tempexit beginif
                    left
                    call turn <- rot_left turn
                endif
            endif
            temp <- wall
            if temp < 1 beginif
                left
                call turn <- rot_left turn
            endif
            if temp > 0 beginif
                move(1)
                call x, y <- move_x_y turn, x, y
            endif
            noexit <- exit
            i <- 1
        endif

        if x > uminus and x < 1 beginif
            if y > uminus and y < 1 beginif
                if count > 9 beginif
                    noexit <- true
                endif
                if count < 10 beginif
                    count <- count + 1
                    if count < 5 beginif
                        left
                        call turn <- rot_left turn
                    endif
                    if count > 5 beginif
                        right
                        call turn <- rot_right turn
                    endif
                    temp <- wall
                    for i=1:temp beginfor
                        move(1)
                        x, y <- move_x_y turn, x, y
                    endfor
                    x<-0
                    y<-0
                    left
                    call turn <- rot_left turn
                    i <- 0
                endif
            endif
        endif
    endfor
    int toExit = wall
    res <- false
    if exit beginif
        move(toExit)
        res <- true
    endif
end

int t = function rot_right (int turn) begin
    int tmpTurn = turn
    tmpTurn <- tmpTurn + 1
    if tmpTurn > 3 beginif
        tmpTurn <- 0
    endif
    int t = tmpTurn
end

int t = function rot_left(int turn) begin
    int tmpTurn = turn
    tmpTurn <- tmpTurn - 1
    if tmpTurn < 0 beginif
        tmpTurn <- 3
    endif
    int t = tmpTurn
end

int n, int m = function move_x_y(int turn, int x, int y) begin
    int tmpTurn = turn
    int tmpX = x
    int tmpY = y
    if tmpTurn < 1 beginif
        tmpX <- tmpX + 1
    endif
    if tmpTurn < 2  beginif
        if tmpTurn > 0 beginif
            tmpY <- tmpY + 1
        endif
    endif
    if tmpTurn < 3 beginif
        if tmpTurn > 1 beginif
            tmpX <- tmpX - 1
        endif
    endif
    if tmpTurn < 4 and tmpTurn > 2 beginif
        if tmpTurn > 2 beginif
            tmpY <- tmpY - 1
        endif
    endif
    int n = tmpX
    int m = tmpY
end

